  <div style="height:400px; width:100%;">
 <div class="modal fade us-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">

    <div class="modal-content"> 
           <div class="modal-header">
                  <button class="close" data-dismiss="modal">×</button>
                    <h3 class="panel-title">Confirmation</h3> 
                </div>
            <div class="modal-body">
              
                <h3 class="panel-title" id='panel_text_updated'>Scene Updated Successfully.</h3> 
            </div>
            <div class="modal-footer text-center">  
               <button class="btn btn-primary" data-dismiss="modal">Ok</button>
            </div>

        </div>
      </div>
  
    </div> 


  <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">

    <div class="modal-content"> 
           <div class="modal-header">
                  <button class="close" data-dismiss="modal">×</button>
                    <h3 class="panel-title">Confirmation</h3> 
                </div>
            <div class="modal-body">
              
                <h3 class="panel-title" id='panel_text'>Scene Saved Successfully.</h3> 
            </div>
            <div class="modal-footer text-center">  
               <button class="btn btn-primary" data-dismiss="modal">Ok</button>
            </div>

        </div>
      </div>
  
    </div> 
    <div class="modal fade es-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">    
  <div class="modal-dialog modal-lg">
    <div class="modal-content"> 
      <div class="modal-header">
          <button class="close" data-dismiss="modal">×</button>
          <h3 class="panel-title">Edit Scene</h3> 
        </div>
        <div class="modal-body" style="width: 100%; height: 600px;">  
          <div class="panel-body">
            <form accept-charset="UTF-8" role="form" id="geolocation">
                 
                <fieldset>
                <div class="form-group" id="errors2"></div>
                
                 <div class="form-group">
                  <input style="width:49%;float:left;margin-left: 0px; margin-right: 2px; margin-top: 4px; margin-bottom: 4px;" type="text" name="geocomplete" placeholder="Location" class="form-control"  id="geocomplete_modal" autocomplete="off"><input style="width:49%;float:left;margin-left: 2px; margin-right: 0px; margin-top: 4px; margin-bottom: 4px;"type="text" name="descrption" placeholder="Location Description" class="form-control" id="description_location_modal" style="width:50%;float:right;"> 
                </div>
                <div  class="form-group">
                  <input id="show_modal" style="margin-left: 0px; margin-right: 5px; margin-top: 4px; margin-bottom: 4px; width:99%;float:left;" class="form-control" placeholder="Specify a Show" name="show" type="text">
                </div>
                <div  class="form-group">
                  <input   style="margin-left: 0px; margin-right: 0px; margin-top: 4px; margin-bottom: 4px;width:49%;float:left;" id="quotes_modal" class="form-control" placeholder="Quotes - comma separated" name="quotes" type="text"> <input style="margin-left: 0px; margin-right: 2px; margin-top: 4px; margin-bottom: 4px;width:49%;float:right;"   id="description_modal" class="form-control" placeholder="Scene Description" name="descrption_modal" type="text"><br/>
                </div> 
                  <div class="form-group">&nbsp;</div>
                 <div class="form-group" style="visibility: hidden;">
                  <input id="address_modal" type="hidden"><input id="lat_modal" type="hidden"><input id="lng_modal" type="hidden">
                  <input id="country_modal" type="hidden">
                  <input id="zipcode_modal" type="hidden">
                  <input id="city_modal" type="hidden">
                  <input id="state_modal" type="hidden">
                  <input id="address_1_modal" type="hidden">
                  <input id="county_modal" type="hidden">
                  <input id="show_id_modal" type="hidden">
                  <input id="show_name_modal" type="hidden">
                  <input id="show_type_modal" type="hidden">
                  <input id="objectId_modal" type="hidden">
                </div>
                  <div class="form-group text-center">
                 <span> <b>Start </b><input class='spinner'  style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" size=4 id="start_hour_modal" value="HH">:<input  style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" class='spinner' id="start_minute_modal"  size=4 value="MM">:<input  style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" class='spinner'  size=4 id="start_second_modal" value="SS">
                  <br/> <br/>  <b>End </b><input  style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" class='spinner'  size=4 id="end_hour_modal" value="HH">:<input  style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" class='spinner' id="end_minute_modal"  size=4 value="MM">:<input  style="margin-left:2px;margin-right:2px;margin-top:2px;margin-bottom:2px;" class='spinner'  size=4 id="end_second_modal" value="SS"></span><span style="float:right;"></span>
                </div>


              </fieldset>
            </form>
          </div>
           <div style="height:150px; width:100%;overflow:visible;"  >
                  <div style="height:150px; width:100%;overflow:visible;" id="map-canvas-modal"/>
          </div>    
                   
               
         </div>
        <div class="modal-footer">  
          <button  id="update_modal" class="updateSceneYes btn btn-primary"  data-dismiss="modal">Update</button><button class="btn btn-primary" data-dismiss="modal">Cancel</button>
        </div>
      </div>
  </div>
</div>
</div>
<div class="modal fade ds-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">    
  <div class="modal-dialog modal-lg">
    <div class="modal-content"> 
      <div class="modal-header">
          <button class="close" data-dismiss="modal">×</button>
          <h3 class="panel-title">Are you sure you want to delete this scene?</h3> 
        </div>
        <div class="modal-body" style="height: 500px;">  
          <div class="pull-left">

              <input type="hidden" id="objectId" text=""/>
              <input type="hidden" id="tab_index" text=""/>
              <!-- <div class="pull-left"> -->
                <div><span id='show_type'></span>    <span id='show_name'></span>  -  <span id='releaseYear'></span>   </div> 
                <div id='address_1'></div>
                <div><span id='city'></span>, <span id='state'></span></div>
          </div>
          <div class="pull-right">
             <img class="pull-right" src="" id="poster_id"/>
          </div>
              
             
                   
               
         </div>
        <div class="modal-footer">  
          <button data-id="" class="deleteSceneYes btn btn-primary"  data-dismiss="modal">Yes</button><button class="btn btn-primary" data-dismiss="modal">No</button>
        </div>
      </div>
  </div>
</div>
     <div class="row vertical-offset-100" style="width:100%;">
      <div class="col-md-14">
        <div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title">Add Scene</h3> 
          </div>
          <div class="panel-body">
            <form accept-charset="UTF-8" role="form" id="geolocation">
                 
                <fieldset>
                <div class="form-group" id="errors2"></div>
                
                <div class="form-group">
                  <input style="width:49%;float:left;margin-left: 0px; margin-right: 5px; margin-top: 4px; margin-bottom: 4px;" type="text" name="geocomplete" placeholder="Location" class="form-control"  id="geocomplete" autocomplete="off"><input style="width:49%;float:left;margin-left: 5px; margin-right: 0px; margin-top: 4px; margin-bottom: 4px;"type="text" name="descrption" placeholder="Location Description" class="form-control" id="description_location" style="width:50%;float:right;"> 
                </div>
                <div  class="form-group">
                  <input id="show" style="margin-left: 0px; margin-right: 5px; margin-top: 4px; margin-bottom: 4px; width:99%;float:left;" class="form-control" placeholder="Specify a Show" name="show" type="text">
                </div>
                <div  class="form-group">
                  <input   style="margin-left: 0px; margin-right: 2px; margin-top: 4px; margin-bottom: 4px;width:49%;float:left;" id="quotes" class="form-control" placeholder="Quotes - comma separated" name="quotes" type="text"> <input style="margin-left: 0px; margin-right: 10px; margin-top: 4px; margin-bottom: 4px;width:49%;float:right;"   id="description" class="form-control" placeholder="Scene Description" name="descrption" type="text"><br/>
                </div> 
                  <div style="padding: 5px;" class="form-group">&nbsp;</div>
                 <div class="form-group" style="visibility: hidden;">
                  <input id="address" type="hidden"><input id="lat" type="hidden"><input id="lng" type="hidden">
                  <input id="country" type="hidden">
                  <input id="zipcode" type="hidden">
                  <input id="city" type="hidden">
                  <input id="state" type="hidden">
                  <input id="address_1" type="hidden">
                  <input id="county" type="hidden">
                  <input id="show_id" type="hidden">
                  <input id="show_name" type="hidden">
                  <input id="show_type" type="hidden">
                </div>
                 <div class="form-group text-center">
                 <span style="float:left;"> <b>Start </b><input class='spinner'  size=4 id="start_hour" value="HH">:<input class='spinner' id="start_minute"  size=4 value="MM">:<input class='spinner'  size=4 id="start_second" value="SS">
                   <b>End </b><input class='spinner'  size=4 id="end_hour" value="HH">:<input class='spinner' id="end_minute"  size=4 value="MM">:<input class='spinner'  size=4 id="end_second" value="SS"></span><span style="float:right;"><button id="save"  type="button"  data-target=".bs-example-modal-lg"  class="btn btn-large btn-primary">Save</button></span>
                </div>
                <!--  <div class="form-group text-center">
                  
                </div>  -->

              </fieldset>
            </form>
          </div>
          <div style="height:450px; width:100%;" class="panel-footer">
                  <div id="map-canvas"/>
          </div> 
        </div>
      </div>
    </div>
<div style="visibility: hidden;"><%=image_tag("current-location.png", alt: "Current Location", class: "current-location" , id: "current-location-img")%></div>




  </div>
    <script>
$(document).ready(function()
{   

 




var logger = function(str)
{
     window.console && window.console.log(str);
}   
var CURRENT_ROLE=null;  
    Parse.initialize("qPOsLuiYC9vZAPcz8yYYPdwY5jjnlO05w7mOusu4", "dwKdYKeoPC3cInAmapc2uUiorsuUfzg8kvXmYKLM");
    var MAP;
    var MAP_MODAL;
    var MARKER;
    var MARKER_MODAL;
    var AUTOCOMPLETE;
    var MARKER_MODAL;
    var CURRENT_TAB=1;
    var DEFAULT_PAGE_SIZE=20;
var currentUser = Parse.User.current();





var query = (new Parse.Query(Parse.Role));
        // query.equalTo("name", "Administrators");
        query.equalTo("users", Parse.User.current() );
        query.first().then(function(adminRole) {
          // console.log(adminRole);

            if (adminRole) {
              if( (!CURRENT_ROLE) || (CURRENT_ROLE && CURRENT_ROLE['AMDIN_PRIVELEGE'] < adminRole['ADMIN_PRIVELEGE']) )
              {
                  CURRENT_ROLE=adminRole;
                  logger(CURRENT_ROLE);
                  logger('add scene current role is '+CURRENT_ROLE.get('name'));
              }
            
                // console.log("***********************user is an admin");
            } else {
                logger("add scene ***********************user is not an admin");
            }
        });  


 var snm_scene = Parse.Object.extend("SNMScene");

      var scene_list = Parse.Collection.extend({
        model: snm_scene
      }); 

      var MARKERS_ = new Array();
      var SCENES_ = new scene_list();

 
   var point_= Backbone.Model.extend({
          defaults:{
            latitude: 0.0,longitude:0.0, title:'', imdb_id: ''
          },
          toLatLng: function()
          {
            return new google.maps.LatLng( parseFloat(this.get('latitude')),parseFloat(this.get('longitude')) );
          }
      });
 
      var list_ = Backbone.Collection.extend({
        model: point_
      });
 
var UserLocation = Backbone.Model.extend({
  defaults:{
    user: Parse.User.current(),
    defaultLocation: new point_().set({
     latitude: Parse.User.current().get("location")['latitude'],
     longitude: Parse.User.current().get("location")['longitude']
    }),
    selectedLocation: null
  },
  initialize: function(){} 
}); 

var LocationTab = Backbone.Model.extend({
  defaults:{
    t_id: 0,
    max: 100,
    counter: 1,
    tabName: '*',
    map: null,
    active_count: DEFAULT_PAGE_SIZE,
    center_point: null,
    pointList: new list_()
  },
  initialize: function(){},
  add: function(newPoint){
    this.get('pointList').add(newPoint); 
  }, setMax: function(m){
    this.set('max',m);
  },
  center: function(){
    MAP.setCenter(center_point);
  }
});
var LocationTabs = Backbone.Collection.extend({
   model: LocationTab ,
   find: function(tid){
    for( var i =0 ; i < 10 ; i++)
    {
          var tab = _.filter( this.models, function(model){
            return (
                model.get('t_id') == tid
            );
            });
            if(tab)
            {
              // console.log("TAB FOUND "+tab);
              // console.log(tab);
              return tab;
            }
            else{
              // console.log('no tab found');
            }
    } 
}
});
  var TABS = new LocationTabs();
  var GEOCODER =new google.maps.Geocoder();
  var TAB_SIZES = {}
var UserLocationView = Backbone.View.extend({
  el: $('body'),
  initialize: function(){
   
    _.bindAll(this,'render' ,'renderScenes', 'renderMap','reverseGeoCode','recenter','currentLocation');

    this.pointList = new list_();

     
    this.tabCounter=1;
    this.tabIndex = new Object();
    this.PAGE_SIZE=20;
    this.pointListMap={};



    this.userLocation = new UserLocation();
    this.centerDefault = this.userLocation.get('defaultLocation').toLatLng(),
    this.mapOptions = { zoom: 12 , center: this.centerDefault };
    MAP = new google.maps.Map(document.getElementById('map-canvas'), this.mapOptions);
   
    this.geocoder=new google.maps.Geocoder();
    this.reverseGeoCode(this.centerDefault);
    this.bounds = new google.maps.LatLngBounds();


    this.tabIndex[1]=this.userLocation.get('defaultLocation');
    this.render('default' ,this.defaultString ,null);
    this.countMap={};
    this.currentLocation();
     },
       currentLocation: function(){
     if (navigator.geolocation) {
         navigator.geolocation.getCurrentPosition(function (position) {
             initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
             MAP.setCenter(initialLocation);

              var marker = new google.maps.Marker({
                                                animation: google.maps.Animation.DROP,
                                                map: MAP,
                                                position:initialLocation, 
                                                zIndex: 1000,
                                                icon:  $('#current-location-img').attr('src')  ,
                                                title: 'Current Location' });
                            marker.setMap( MAP );

                            GEOCODER.geocode({'latLng': initialLocation}, function(results, status) {
                                    if (status == google.maps.GeocoderStatus.OK) {

                                      if (results[1]) {
                                       $('#address').text(results[1].formatted_address);
                                       $("#geocomplete").attr('placeholder',results[1].formatted_address);
                                       $('#lat').text(initialLocation.lat());
                                       $('#lng').text(initialLocation.lng());
                                       var locality_to_address = {};
                                        if(results[0].address_components)
                                        {
                                              var array_ = results[0].address_components;
                                              // console.log(array_);
                                              for(var i = 0 ; i < array_.length; i++)
                                              {
                                                // console.log(i+" -> "+array_.length);
                                                // console.log(array_[i]);
                                                for(var j = 0 ; j< array_[i]['types'].length; j++)
                                                {
                                                  // console.log(array_[i]['types'][j]+' == '+array_[i]['long_name']);
                                                  locality_to_address[array_[i]['types'][j]]=array_[i]['long_name'];
                                                }
                                              }
                                              // console.log(locality_to_address);
                                              $('#county').text(locality_to_address['administrative_area_level_2']);
                                              $('#city').text(locality_to_address['sublocality']);

                                              $('#state').text(locality_to_address['administrative_area_level_1']);
                                              $('#country').text(locality_to_address['country']);
                                              $('#zipcode').text(locality_to_address['postal_code']);
                                              $('#address_1').text(locality_to_address['street_number']+' '+locality_to_address['route']);
                                        }
                                         
                                      }
                                    } else {
                                      alert("Geocoder failed due to: " + status);
                                    }
                                  });
                            // MAP.setCenter(myLatlng);

         });
  }
  },
  reverseGeoCode: function(latLng)
  {
   this.geocoder.geocode({'latLng': latLng}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        if (results[1]) {
         this.defaultString='*'+results[1].formatted_address;
         $('#1').text(this.defaultString);
        }
      } else {
        alert("Geocoder failed due to: " + status);
      }
    });


  },
  recenter: function(idx){
    if(idx>0)
    { 
      var point = this.tabIndex[idx];
      if(point)
      {
        this.map.setCenter(point.toLatLng());
      }
    } 
  },
  renderMap: function(new_tab){
  
  },
  renderScenes: function(scenes,newTab){
           
  }, 
  renderPage: function(page_count, idx){
   },
  render: function(type, selected_string, chosen){}
 
});
var userLocationView = new UserLocationView();
        $("#geocomplete").geocomplete(userLocationView['mapOptions']).bind("geocode:result", function(event, result){
 
                  var currentUser = Parse.User.current(); 
                    var myLatlng = new google.maps.LatLng(parseFloat(result['geometry']['location'].lat()), parseFloat(result['geometry']['location'].lng()));
                    // userLocationView.render('chosen' , result['formatted_address'], myLatlng);
                    if(MARKER)
                    {
                      MARKER.setMap(null);
                    }
                  MARKER = new google.maps.Marker({
                                                animation: google.maps.Animation.DROP,
                                                map: MAP,
                                                position:myLatlng, 
                                                title: result['formatted_address'] });


                            MARKER.setMap( MAP );
                            MAP.setCenter(myLatlng);
                            // console.log(result);


                              GEOCODER.geocode({'latLng': myLatlng}, function(results, status) {
                                    if (status == google.maps.GeocoderStatus.OK) {
                                      // console.log(results);
                                      // console.log(results[0]);
                                      if (results[1]) {
                                       //  console.log(results[1]);
                                       // this.defaultString='*'+results[1].formatted_address;
                                       $('#address').text(results[1].formatted_address);
                                       $('#lat').text(myLatlng.lat());
                                       $('#lng').text(myLatlng.lng());
                                       var locality_to_address = {};
                                        if(results[0].address_components)
                                        {
                                              var array_ = results[0].address_components;
                                              // console.log(array_);
                                              for(var i = 0 ; i < array_.length; i++)
                                              {
                                                // console.log(i+" -> "+array_.length);
                                                // console.log(array_[i]);
                                                for(var j = 0 ; j< array_[i]['types'].length; j++)
                                                {
                                                  // console.log(array_[i]['types'][j]+' == '+array_[i]['long_name']);
                                                  locality_to_address[array_[i]['types'][j]]=array_[i]['long_name'];
                                                }
                                              }
                                              // console.log(locality_to_address);
                                              $('#county').text(locality_to_address['administrative_area_level_2']);
                                              $('#city').text(locality_to_address['sublocality']);

                                              $('#state').text(locality_to_address['administrative_area_level_1']);
                                              $('#country').text(locality_to_address['country']);
                                              $('#zipcode').text(locality_to_address['postal_code']);
                                              $('#address_1').text(locality_to_address['street_number']+' '+locality_to_address['route']);
                                        }
                                         
                                      }
                                    } else {
                                      alert("Geocoder failed due to: " + status);
                                    }
                                  });


                            // console.log(' city is '+ result['city']);
                            //  console.log(' state is '+ result['state']);
                            //     console.log(' country is '+ result['country']);
                            //         console.log(' zipcode is '+ result['zipcode']);
                     
          })
          .bind("geocode:error", function(event, status){
            // console.log("ERROR: " + status);
          })
          .bind("geocode:multiple", function(event, results){
            // console.log("Multiple: " + results.length + " results found");
          });











          $( "#show" ).autocomplete({
                source: function( request, response ) {
                      // console.log(request);
                      var data = 
                      {
                          query: request['term']
                      };
                          Parse.Cloud.run('findMovieByName', data ).then(function(movies){ 
                            // console.log(movies);
                             response( $.map( movies, function( movie ) {
                                      return {
                                          label: ' Movie: ' + movie.get('title')+', Release Date: '+movie.get('release_date')+' ',
                                          value: movie.get('title') ,
                                          id: movie['id'],
                                          show_type: 'Movie'
                                      }
                              }));
                          });
                },
                minLength: 3,
            select: function( event, ui ) {
              // console.log(ui);
              $('#show_name').text(ui['item']['value']);
              $('#show_id').text(ui['item']['id']);
              $('#show_type').text(ui['item']['show_type']);
             $('#show').attr('placeholder', ui['item']['value']);

            },
            open: function() {
            $( this ).removeClass( "ui-corner-all" ).addClass( "ui-corner-top" );
            },
            close: function() {
            $( this ).removeClass( "ui-corner-top" ).addClass( "ui-corner-all" );
            } 
          });
 $('.spinner').spinner({min: 0, max:1000});

 $('#save').on('click', function(){
      /*
      Save the scene!
      */
      
     var show_pointer = {
      
                    className:'SNMMovie',
                    objectId: $('#show_id').text(),
                    __type: "Pointer"
                  
     };
     var quotes_string = $('#quotes').val() ;
     var quotes_;
     if(quotes_string)
     {
        quotes_= quotes_string.split(',');
     }
     // alert(quotes_string);
     var data_= {
              description: $('#description').val(),
              latitude: $('#lat').text() ,
              longitude: $('#lng').text() ,
              show_name: $('#show_name').text() ,
              show_type: $('#show_type').text() ,
              country: $('#country').text() ,
              zipcode: $('#zipcode').text() ,
              city: $('#city').text() ,
              state: $('#state').text()  ,
              address_1: $('#address_1').text()  ,
              county: $('#county').text() ,
              start_hour: $('#start_hour').attr('aria-valuenow')  ,
              start_minute:  $('#start_minute').attr('aria-valuenow')  ,
              start_second: $('#start_second').attr('aria-valuenow') ,
              end_hour:  $('#end_hour').attr('aria-valuenow') ,
              end_minute: $('#end_minute').attr('aria-valuenow') ,
              end_second: $('#end_second').attr('aria-valuenow') ,
              description_location: $('#description_location').val(),
               show: show_pointer,
               quotes: quotes_
     }; 
      var replacer = function(key,val)
            {
                if(key=='start_hour' || 
                  key=='start_minute' || 
                  key=='start_second' || 
                  key=='end_hour' || 
                  key=='end_minute' || 
                  key=='end_second'  
                 )
                {
                    return parseInt(val);
                }
                else if( key=='latitude' || 
                  key=='longitude')
                {
                  return parseFloat(val);
                }
                return val;
            };
              // alert(JSON.stringify(data_,replacer));
             $.ajax({
            type: 'POST',
            dataType: 'json',
            headers: {
                  'X-Parse-Application-Id':  "qPOsLuiYC9vZAPcz8yYYPdwY5jjnlO05w7mOusu4" ,
                  'X-Parse-REST-API-Key' : "ojVHFgNLjMwT1KMngErKPkxNQFVuowv2qUXtvjih"
            },
            url: "https://api.parse.com/1/classes/SNMScene",

            data: JSON.stringify(data_,replacer),
            contentType: "application/json",
            success: function(msg){
              logger(msg);
              var objectId = msg['objectId']; 
              var movieObjectId = msg['show']['objectId'];
              logger('object id is '+objectId);
              SCENES_.add(msg);

                $('#panel_text').text('Successfully added scene '+msg['show_name'] + ' ' + msg['show_type'] );
                $('.bs-example-modal-lg').modal('show');
                $.ajax({
                            type: 'GET',
                            dataType: 'json',
                            headers: {
                                  'X-Parse-Application-Id':  "qPOsLuiYC9vZAPcz8yYYPdwY5jjnlO05w7mOusu4" ,
                                  'X-Parse-REST-API-Key' : "ojVHFgNLjMwT1KMngErKPkxNQFVuowv2qUXtvjih"
                            },
                            url: "https://api.parse.com/1/classes/SNMMovie/"+movieObjectId,

                            // data: JSON.stringify(data_,replacer),
                            contentType: "application/json",
                            success: function(movie){
                              logger(movie);


                                   var infowindow = new google.maps.InfoWindow({
                                                                content:  '<div class="panel panel-default" style="width: 300px;height: 250px;"><div class="panel-heading" > <a href="http://www.imdb.com/title/'+movie['imdb_id']+'/" target="_blank">'+msg['show_name']+'</a><i>'+movie['releaseYear'] +'</i></div><div class="panel-body"><div><img style="float:right;"  src="https://image.tmdb.org/t/p/w45'+movie['poster_path']+'"/><ul id="actor_list'+movie['moviedb_id']+'"></ul></div></div><div class="panel-footer"><button id="load" style="visibility: hidden;font-size: 9px;" type="button" data-target=".ds-example-modal-lg"  class="btn btn-group-xs btn-primary">Edit</button><button id="edit'+movie['moviedb_id']+'" style="font-size: 9px;" type="button" data-target=".ds-example-modal-lg"  class="btn btn-group-xs btn-primary">Edit</button><button id="delete'+movie['moviedb_id']+'" style="font-size: 9px;" type="button" data-target=".ds-example-modal-lg" class="btn btn-group-xs btn-primary">Delete</button></div></div>',
                                                                maxWidth: 400,
                                                                closeBoxMargin: "12px 4px 2px 2px",
                                                                closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif",
                                                                infoBoxClearance: new google.maps.Size(1, 1)
                                                           });
                                logger('infowindow created');
                                                           var marker = new google.maps.Marker({
                                                                                animation: google.maps.Animation.DROP,
                                                                                map: MAP,
                                                                                position:  new google.maps.LatLng(parseFloat( msg['latitude']), parseFloat( msg['longitude'])),
                                                                                title: msg['title']});
                                logger('marker created');
                                                            google.maps.event.addListener(marker, 'click', function() {
                                                              infowindow.open(MAP,marker);
                                                              google.maps.event.addListener(infowindow,'domready' , function(){
                                                                logger('domready');


                                $('#load').on('click', function(e){
                                       if( $('#actor_list'+movie['moviedb_id']+' li').length < 5)
                                                                        {
                                                                          $.ajax({
                                                                                    type: 'GET',
                                                                                     dataType: 'jsonp',
                                                                                     async: false,
                                                                                    url: "http://api.themoviedb.org/3/movie/"+movie['moviedb_id']+"/credits?api_key=dc324a52fbf2f454e96fa85c2ad98e76", 
                                                                                    contentType: "application/json",
                                                                                    success: function(json) {
                                                                                        logger(json);
                                                                                        var cast = json['cast'];
                                                                                        for(var i = 0 ; cast && i < cast.length; i++)
                                                                                        { 
                                                                                          if(i<5 && $('#actor_list'+movie['moviedb_id']+' li').length < 5)
                                                                                          { 
                                                                                            var li_element = '<li  style=" white-space: normal;"> <span style="font-size: 8px;">'+cast[i]['name']+'</span></li>';
                                                                                            $('#actor_list'+movie['moviedb_id']).append(li_element);
                                                                                          }
                                                                                        }
                                                                                    },
                                                                                    error: function(e) {
                                                                                         logger(e.message);
                                                                                    }
                                                                                  }
                                                                                );
                                                                        }
                                });




                                $('#delete'+movie['moviedb_id']).on('click',function(e){
                                    $('#show_name').text(msg['show_name']);
                                                                    $('#show_type').text(msg['show_type']);
                                                                    $('#address_1').text(msg['address_1']);
                                                                    $('#city').text(msg['city']);
                                                                    $('#state').text(msg['state']); 
                                                                    $('#objectId').text(objectId); 
                                                                    $('.ds-example-modal-lg').modal('show');
                                    $('#releaseYear').text(movie['releaseYear']);
                                    $('#poster_id').attr('src','https://image.tmdb.org/t/p/w300'+movie['poster_path'] );
                                     
                                });

$('#update_modal').on('click', function(){
      /*
      Save the scene!
      */
    logger('udpate_modal->click');
     var show_pointer = {
      
                    className:'SNMMovie',
                    objectId: $('#show_id_modal').text(),
                    __type: "Pointer"
                  
     };
      logger(show_pointer);
     var quotes_string = $('#quotes_modal').val() ;
     var quotes_;
     if(quotes_string)
     {
        quotes_= quotes_string.split(',');
     }
     logger(quotes_string);
     // alert(quotes_string);
     var data_= {
              description: $('#description_modal').val(),
              description_location: $('#description_location_modal').val(),
              latitude: $('#lat_modal').text() ,
              longitude: $('#lng_modal').text() ,
              show_name: $('#show_name_modal').text() ,
              show_type: $('#show_type_modal').text() ,
              country: $('#country_modal').text() ,
              zipcode: $('#zipcode_modal').text() ,
              city: $('#city_modal').text() ,
              state: $('#state_modal').text()  ,
              address_1: $('#address_1_modal').text()  ,
              county: $('#county_modal').text() ,
              start_hour: $('#start_hour_modal').attr('aria-valuenow')  ,
              start_minute:  $('#start_minute_modal').attr('aria-valuenow')  ,
              start_second: $('#start_second_modal').attr('aria-valuenow') ,
              end_hour:  $('#end_hour_modal').attr('aria-valuenow') ,
              end_minute: $('#end_minute_modal').attr('aria-valuenow') ,
              end_second: $('#end_second_modal').attr('aria-valuenow') ,
               show: show_pointer,
               quotes: quotes_
     }; 
     logger(data_);
        var replacer = function(key,val)
            {
                if(key=='start_hour' || 
                  key=='start_minute' || 
                  key=='start_second' || 
                  key=='end_hour' || 
                  key=='end_minute' || 
                  key=='end_second'  
                 )
                {
                    return parseInt(val);
                }
                else if( key=='latitude' || 
                  key=='longitude')
                {
                  return parseFloat(val);
                }
                return val;
            };
             $.ajax({
            type: 'PUT',
            dataType: 'json',
            headers: {
                  'X-Parse-Application-Id':  "qPOsLuiYC9vZAPcz8yYYPdwY5jjnlO05w7mOusu4" ,
                  'X-Parse-REST-API-Key' : "ojVHFgNLjMwT1KMngErKPkxNQFVuowv2qUXtvjih"
            },
            url: "https://api.parse.com/1/classes/SNMScene/"+$('#objectId_modal').text(),

            data: JSON.stringify(data_,replacer),
            contentType: "application/json",
            success: function(msg){
              logger(msg);
              var objectId = $('#objectId_modal').text();
              var movieObjectId = msg['show']['objectId'];
              logger('object id is '+objectId);
              SCENES_.add(msg);
              $('.us-example-modal-lg').modal('show');
              $('#panel_text_updated').text('Successfully updated scene for '+msg['show_type']+' : '+msg['show_name']+'.');
              for(var i=0; i < SCENES_.length; i++)
              {
                var scene_ = SCENES_.at(i);
                logger(objectId+' '+scene_.id);
                logger(scene_);
                if(scene_ && scene_.id==objectId)
                {
                    var marker=MARKERS_[i];
                    marker.setMap(null);
                    marker.setPosition( new google.maps.LatLng( parseFloat(msg['latitude']), parseFloat(msg['longitude']) ) );
                    MAP.panTo( new google.maps.LatLng( parseFloat(msg['latitude']), parseFloat(msg['longitude']) ) ); 
                    marker.setMap(MAP);
                    logger('marker moved.');
                }
              }
            }
          });

  });
                                  

                                 $('#edit'+movie['moviedb_id']).on('click',function(e){
                                  logger('edit -- logger id is ');
                      
                                  $('#objectId_modal').text(objectId);
                                  logger('movie is'); 
                                  logger(movie);
                                  logger(movie.id);
                                  logger(movie['objectId']);

                                  $('#show_id_modal').text(movie['objectId']);
                                  $('#show_name_modal').text(msg['show_name']);
                                  $('#show_type_modal').text(msg['show_type']);

                                  logger('edit - start_hour=='+msg['start_hour'] );
                                  logger('edit - start_minute=='+msg['start_minute'] );
                                   logger('edit - start_second=='+msg['start_second'] );
                                        logger('edit - end_hour=='+msg['end_hour'] );
                                  logger('edit - end_minute=='+msg['end_minute'] );
                                   logger('edit - end_second=='+msg['end_second'] );
                                  $('#description_modal').attr('placeholder',msg['description']);
                                  $('#description_location_modal').attr('placeholder',msg['description_location']);
                                  $('#description_location_modal').text(msg['description_location']);
                                  $('#description_location_modal').val(msg['description_location']);
                                   $('#description_modal').text(msg['description']);
                                   $('#description_modal').val(msg['description']);
                                   $('#start_hour_modal').spinner('value',msg['start_hour']);   
                                                                   $('#start_minute_modal').spinner('value',msg['start_minute']);
                                                              
                                                                   $('#start_second_modal').spinner('value',msg['start_second']);
                                                                   
                                                                   $('#end_hour_modal').spinner('value',msg['end_hour']);
                                                                    
                                                                   $('#end_minute_modal').spinner('value',msg['end_minute']);
                                                                 
                                                                   $('#end_second_modal').spinner('value',msg['end_second']);
                                                                   
                                  var quote_string ='';
                                  if(msg['quotes'])
                                  {
                                    quote_string=msg['quotes'].toString();
                                  }
                                  $('#quotes_modal').attr('placeholder',quote_string);
                                  $('#quotes_modal').val(quote_string);
                                  $('#show_modal').attr('placeholder',msg['show_name']);
                                    $('#lat_modal').text(parseFloat( msg['latitude']));
                                   $('#lng_modal').text(parseFloat( msg['longitude']));
                                   var scene_point= new google.maps.LatLng(parseFloat( msg['latitude']), parseFloat( msg['longitude']));

                                   GEOCODER.geocode({'latLng': scene_point}, function(results, status) 
                                   {
                                                                if (status == google.maps.GeocoderStatus.OK)
                                                                {
                                                                  logger('results.1');
                                                                  logger(results[1]);
                                                                  logger(results);

                                                                  

                                                                  if(results[0])
                                                                  {
                                                                    $('#autocomplete').val( results[0].formatted_address);
                                                                    
                                                                    $('#autocomplete').attr('placeholder', results[0].formatted_address);
                                                                        $('#address_modal').text(results[0].formatted_address);
                                                                  }
                                                                  if (results[1]) 
                                                                  { 
                                                                    
                                                                         $('#lat_modal').text(parseFloat( msg['latitude']));
                                                                         $('#lng_modal').text(parseFloat( msg['longitude']));
                                                                  
                                                                         var locality_to_address = {};
                                                                          if(results[0].address_components)
                                                                          {
                                                                                var array_ = results[0].address_components;
                                                                                // console.log(array_);
                                                                                for(var i = 0 ; i < array_.length; i++)
                                                                                {
                                                                                  // console.log(i+" -> "+array_.length);
                                                                                  // console.log(array_[i]);
                                                                                  for(var j = 0 ; j< array_[i]['types'].length; j++)
                                                                                  {
                                                                                    // console.log(array_[i]['types'][j]+' == '+array_[i]['long_name']);
                                                                                    locality_to_address[array_[i]['types'][j]]=array_[i]['long_name'];
                                                                                  }
                                                                                }
                                                                                // console.log(locality_to_address);
                                                                                $('#county_modal').text(locality_to_address['administrative_area_level_2']);
                                                                                $('#city_modal').text(locality_to_address['sublocality']);

                                                                                $('#state_modal').text(locality_to_address['administrative_area_level_1']);
                                                                                $('#country_modal').text(locality_to_address['country']);
                                                                                $('#zipcode_modal').text(locality_to_address['postal_code']);
                                                                                $('#address_1_modal').text(locality_to_address['street_number']+' '+locality_to_address['route']);
                                                                          } 
                                                                     $('.es-example-modal-lg').modal('show');
                                                                     $('#geocomplete_modal').attr('placeholder', results[1].formatted_address);
                                                                  }
                                                                }
                                                               else 
                                                                {
                                                                  alert("Geocoder failed due to: " + status);
                                                                }
                                                              });


                                                 
     // $("#geocomplete_modal").geocomplete(userLocationView['mapOptions']).bind("geocode:result", function(event, result){
 
                
                     
     //      })
     //      .bind("geocode:error", function(event, status){
     //        // console.log("ERROR: " + status);
     //      })
     //      .bind("geocode:multiple", function(event, results){
     //        // console.log("Multiple: " + results.length + " results found");
     //      });

                         $('.es-example-modal-lg').on('show.bs.modal', function() {


                                logger('map modal creating ');

                                var mapOptions_ = { 
                                  zoom: 12 ,
                                  mapTypeId: google.maps.MapTypeId.ROADMAP,
                                    mapTypeControl: true,
                                        mapTypeControlOptions: {
                                            style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                                            position: google.maps.ControlPosition.BOTTOM_CENTER
                                        }
                                 };
                                 MAP_MODAL = new google.maps.Map(document.getElementById('map-canvas-modal'), mapOptions_) ;
                                 

                                 google.maps.event.addListenerOnce(MAP_MODAL, 'idle', function(){
                                    $(window).resize();



                                     google.maps.event.trigger(MAP_MODAL, 'resize');
                                                         
                                                       

                                   if (navigator.geolocation) {
                                       navigator.geolocation.getCurrentPosition(function (position) {
                                          var initLocation_ = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                                           MAP.setCenter(initLocation_);

                                            var marker = new google.maps.Marker({
                                                                              animation: google.maps.Animation.DROP,
                                                                              map: MAP_MODAL, 
                                                                              zIndex: 1000,
                                                                              icon:  $('#current-location-img').attr('src')  ,
                                                                              title: 'Current Location' ,
                                                                              position: initLocation_
                                                                            });



                                                 
                                                          marker.setMap( MAP_MODAL );
                                                          MAP_MODAL.setCenter(initLocation_);
                                                          


                                                            logger($('#lat_modal').val());
                                                            logger($('#lng_modal').val());


                                var scene_point= new google.maps.LatLng(
                                  parseFloat( $('#lat_modal').text()), 
                                  parseFloat($('#lng_modal').text())
                                );
                                logger(scene_point);
                                var infowindow = new google.maps.InfoWindow({
                                                                content:  '<div>'+$('#show_name_modal').text()+' original location'+'</div>',
                                                                maxWidth: 400,
                                                                closeBoxMargin: "12px 4px 2px 2px",
                                                                closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif",
                                                                infoBoxClearance: new google.maps.Size(1, 1)
                                                           });
         
                                 var marker = new google.maps.Marker({
                                       animation: google.maps.Animation.DROP,
                                       map: MAP_MODAL,
                                       position: scene_point, 
                                       zIndex: 1000 ,
                                       title:$('#show_name_modal').text()+' original location' 
                                 });

                                 marker.setMap(MAP_MODAL);
                                 MAP_MODAL.setCenter(scene_point);
                                 google.maps.event.addListener(marker, 'click', function() {
                                                                                              infowindow.open(MAP_MODAL,marker);
                                                                                            });

                                       });
                                }


                                });
                                  // var scene_point= new google.maps.LatLng(parseFloat( msg['latitude']), parseFloat( msg['longitude']));
                                  

                                  }).modal('show');
                                    
                                });
                                logger('trigger click');
                                $('#load').trigger('click');
                              }); 
                          });
                        // });
                          marker.setMap( MAP); 
                          MARKERS_.push(marker);


                            },
                            error: function(error)
                            {
                              // alert( "Failed to delete scen " + error.msg);
                            }
                          }
                        ); 


            }
          }
        );

   $('#autocomplete').geocomplete({map: '#map-canvas-modal'}).bind('geocode:result',function(event, result){
                logger('1');
                                              logger(event);
                                              logger(result);
                    var scene_point= new google.maps.LatLng(parseFloat(result['geometry']['location'].lat()), parseFloat(result['geometry']['location'].lng()));
                                  var infowindow = new google.maps.InfoWindow({
                                                                                    content:  '<div style="width:200px;">'+$('#show_name_modal').text()+' new location'+'</div>',
                                                                                    maxWidth: 400,
                                                                                    closeBoxMargin: "12px 4px 2px 2px",
                                                                                    closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif",
                                                                                    infoBoxClearance: new google.maps.Size(1, 1)
                                                                               });


                          if(MARKER_MODAL)
                          {
                            MARKER_MODAL.setMap(null);
                          }
                                 MARKER_MODAL = new google.maps.Marker({
                                       animation: google.maps.Animation.DROP,
                                       map: MAP_MODAL,
                                       position: scene_point, 
                                       zIndex: 1000 ,
                                       title:$('#show_name_modal').text()+' new location' 
                                 });

                                 MARKER_MODAL.setMap(MAP_MODAL);
                                 MAP_MODAL.setCenter(scene_point);
                                 google.maps.event.addListener(MARKER_MODAL, 'click', function() {
                                                                                              infowindow.open(MAP_MODAL,MARKER_MODAL);
                                                                                            });
                                              var locality_to_address = {};
                                              var array_ = result['address_components'];
                                              // console.log(array_);
                                              for(var i = 0 ; i < array_.length; i++)
                                              {
                                                // console.log(i+" -> "+array_.length);
                                                // console.log(array_[i]);
                                                for(var j = 0 ; j< array_[i]['types'].length; j++)
                                                {
                                                  // console.log(array_[i]['types'][j]+' == '+array_[i]['long_name']);
                                                  locality_to_address[array_[i]['types'][j]]=array_[i]['long_name'];
                                                }
                                              }
                                              // console.log(locality_to_address);
                                              $('#lat_modal').text(parseFloat(result['geometry']['location'].lat()));
                                              $('#lng_modal').text( parseFloat(result['geometry']['location'].lng()));
                                              $('#address_modal').text(result['formatted_address']);
                                              $('#county_modal').text(locality_to_address['administrative_area_level_2']);
                                              $('#city_modal').text(locality_to_address['sublocality']);
                                              $('#state_modal').text(locality_to_address['administrative_area_level_1']);
                                              $('#country_modal').text(locality_to_address['country']);
                                              $('#zipcode_modal').text(locality_to_address['postal_code']);
                                              $('#address_1_modal').text(locality_to_address['street_number']+' '+locality_to_address['route']);


                                   

});                                                 
$('.deleteSceneYes').on('click', function(){
    var tab_index = $('#tab_index').text();
    var listing_ =  TAB_SIZES['listing.'+tab_index];
    var markers_ = TAB_SIZES['markers.'+tab_index];
    logger(tab_index);
    logger(listing_);
    logger(markers_);
       $.ajax({
            type: 'DELETE',
            dataType: 'json',
            headers: {
                  'X-Parse-Application-Id':  "qPOsLuiYC9vZAPcz8yYYPdwY5jjnlO05w7mOusu4" ,
                  'X-Parse-REST-API-Key' : "ojVHFgNLjMwT1KMngErKPkxNQFVuowv2qUXtvjih"
            },
            url: "https://api.parse.com/1/classes/SNMScene/"+$('#objectId').text(),

            // data: JSON.stringify(data_,replacer),
            contentType: "application/json",
            success: function(msg){
                $('#panel_text').text('Successfully deleted scene '+$('#show_type').text()+ ' : ' + $('#show_name').text() );
                $('.bs-example-modal-lg').modal('show');
                

            }
            // ,
            // error: function(error)
            // {
            //   alert( "Failed to delete scen " + error.msg);
            // }
          }
        ); 

    for(var i = 0 ;  i < SCENES_.length; i++ )
    {
        var scene =  SCENES_.at(i);
        if(scene.id===$('#objectId').text())
        {
          logger('scene matches '+$('#objectId').text());
          var marker = MARKERS_[i];
          logger('removing ');
          logger(marker);
          marker.setMap(null);
          logger("Removed marker from the map.");
          break;
        }
        else
        {
          logger(scene)
        }
    } 

});


 });

});
    </script>